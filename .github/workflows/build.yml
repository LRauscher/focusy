name: Electron Build and Release

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Cache Node.js modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install

      - name: Build Electron app for Linux
        run: npm run make:linux

      - name: Build Electron app for macOS
        run: npm run make:macos

      - name: Zip macOS Artifacts
        run: npm run zip-macos

      - name: Upload Linux Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-artifacts
          path: |
            out/make/**/*.deb
            out/make/**/*.AppImage

      - name: Upload macOS Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-artifacts
          path: |
            out/make/**/*.dmg
            out/make/zip/**/*.zip

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Use GitHub Secrets for token
        with:
          tag_name: ${{ github.ref_name }}  # Using ref_name for tag
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload Linux Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Use GitHub Secrets for token
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: out/make/**/*.deb
          asset_name: electron-app-linux.deb
          asset_content_type: application/x-debian-package

      - name: Upload macOS Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Use GitHub Secrets for token
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: out/make/**/*.dmg
          asset_name: electron-app-macos.dmg
          asset_content_type: application/x-apple-diskimage

      - name: Upload macOS Zip Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Use GitHub Secrets for token
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: out/make/zip/**/*.zip
          asset_name: electron-app-macos.zip
          asset_content_type: application/zip